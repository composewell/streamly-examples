name: Haskell CI

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build:
    name: GHC ${{ matrix.name }}
    env:
      CABAL_REINIT_CONFIG: y
      LC_ALL: C.UTF-8

      STACK_UPGRADE: "y"

      CABAL_CHECK_RELAX: y
      CABAL_NO_SANDBOX: y

      PACKCHECK_LOCAL_PATH: "./packcheck.sh"
      PACKCHECK_GITHUB_URL: "https://raw.githubusercontent.com/composewell/packcheck"
      PACKCHECK_GITHUB_COMMIT: "a68b7b9c7c21eef8ed273e67030efb1d4fec027c"

      BUILD: ${{ matrix.build }}
      GHCVER: ${{ matrix.ghc_version }}
      CABALVER: ${{ matrix.cabal_version }}
      CABAL_BUILD_OPTIONS: ${{ matrix.cabal_build_options }}
      CABAL_PROJECT: ${{ matrix.cabal_project }}
      DISABLE_DOCS: ${{ matrix.disable_docs }}
      DISABLE_TEST: "y"
      DISABLE_BENCH: "y"

    # XXX macos?
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: 9.4.4
            ghc_version: 9.4.4
            runner: ubuntu-latest
            build: cabal
            cabal_project: cabal.project.user
            cabal_version: 3.8.1.0
            disable_docs: "y"
            disable_sdist_build: "y"
            ignore_error: false
          - name: 9.2.7
            ghc_version: 9.2.7
            runner: ubuntu-latest
            build: cabal
            cabal_project: cabal.project.user
            cabal_version: 3.6.2.0
            disable_docs: "y"
            disable_sdist_build: "y"
            ignore_error: false
          - name: 8.10.7+macOS
            ghc_version: 8.10.7
            runner: macos-latest
            build: cabal
            cabal_project: cabal.project.user
            cabal_version: 3.6.2.0
            disable_docs: "y"
            cabal_build_options: "--flag interop"
            ignore_error: false
    steps:
    - uses: actions/checkout@v2

    - uses: haskell/actions/setup@v1
      with:
        ghc-version: ${{ matrix.ghc_version }}
        cabal-version: ${{ matrix.cabal_version }}

    - uses: actions/cache@v1
      name: Cache ~/.cabal
      with:
        path: ~/.cabal
        key: ${{ runner.os }}-${{ matrix.ghc_version }}-cabal

    - name: Download packcheck
      run: |
        # If a custom stack-yaml is specified, replace the default with that
        if test -e "$STACK_YAML"; then rm -f stack.yaml && ln -sv $STACK_YAML stack.yaml; else true; fi
        unset STACK_YAML

        # Get packcheck if needed
        CURL=$(which curl)
        PACKCHECK_URL=${PACKCHECK_GITHUB_URL}/${PACKCHECK_GITHUB_COMMIT}/packcheck.sh
        if test ! -e "$PACKCHECK_LOCAL_PATH"; then $CURL -sL -o "$PACKCHECK_LOCAL_PATH" $PACKCHECK_URL; fi;
        chmod +x $PACKCHECK_LOCAL_PATH

        os=$(uname -s -m)
        case "$os" in
          "Linux x86_64") GHCUP_ARCH="x86_64-linux" ;;
          "Darwin x86_64") GHCUP_ARCH="x86_64-apple-darwin" ;;
          *) echo "Unknown OS/Arch: $os"; exit 1;;
        esac

        # Check available versions here: https://downloads.haskell.org/~ghcup/
        GHCUP_VER=0.1.20.0
        $CURL -sL -o ./ghcup https://downloads.haskell.org/~ghcup/$GHCUP_VER/${GHCUP_ARCH}-ghcup-$GHCUP_VER
        chmod +x ./ghcup
        if test "$GHCVER" = "head"
        then
          # The URL may change, to find a working URL go to https://gitlab.haskell.org/ghc/ghc/-/jobs/
          # Find a debian10 job, click on a passed/failed job, at the
          # end of the output you will find the tar.xz name, put that after
          # "raw/", and put the job name after "job=".
          # Also see https://github.com/mpickering/ghc-artefact-nix/blob/master/gitlab-artifact.nix
          ./ghcup install ghc -u https://gitlab.haskell.org/ghc/ghc/-/jobs/artifacts/master/raw/ghc-x86_64-linux-deb10-int_native-validate.tar.xz?job=x86_64-linux-deb10-int_native-validate head
        else
          ./ghcup install ghc $GHCVER
        fi
        ./ghcup install cabal $CABALVER
        ./ghcup set ghc $GHCVER
        ./ghcup set cabal $CABALVER

    - name: Run packcheck
      run: |
        bash -c "$PACKCHECK_LOCAL_PATH $BUILD"
